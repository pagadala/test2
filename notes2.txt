

Team,

We currently have a bit of crisis situation for dev progress in blockchain projects, due to things going in the following unplanned ways.

* Dev resource onboarding delays
* Changes in KMS team's support in Signer project
* Last minute changes in the tech approach for ILOC and Signer (due to the above)
* new tech satck/approach to be tried out (local ethereum nodes, pkcs11 etc)
* Sibos and unbelievably aggressive deadlines (2-3 weeks for ILOC and Signer)

In the view of the above, I recommend the following focus areas for the tech team, to get some progress. This is for today and the next two weeks only (Fire-fighting mode). We will continuously review and re-align.

Venkat
* get ILOC new approach working in local environment (local ethereum nodes).
* Implement ILOC business flows (service impl), as many as possible.

Amber, Rob and Niall (based on availability today and next week)
* Refactor Alex's sample code into library functions and identify any additional functions we need to build, to support the flows.
* Create json data object structures (for LC application etc) in Java (Consult Paul)
* Extend/Populate fields for JWS/JWE/AMQP messages in Alex's sample code

Alex & Sudha
* Tech approach for Signer testing (pkcs11, client-certs)
* Signer code installation and testing

Questions? Suggestions?

-----------


DLT tasks
  smart contract
  pantheon connector

Integrations
  mongo connector
  mq connector

Other
  data models
  data validators
  nimbus handler
  logging handler

other components
  main service
  test scripts

----------
I think the flow diagram on the top of the document doesn't really belong here, as no references to the diagram are made in the text below it.  ***nexus***

Also if this diagram need to be cosnidered as a dev requirement, the diagram should relate itself to the sequence diagram as most of its content seem to overlap. We also need to have a Q&A session with dev team, similar to technical design sessions we had, to digest this.

Also, I really think the wording need to be changed with regards to merkle hash and publishing of LC application.

Preferably, we should mention that the hash (fingerprint) of the LC application is what is being recorded in the DLT. We can show logs only to that effect.

Also I think we should mention that, by "Representation of LC Application", we mean an hash of the LC application content. Because a representation could mean some form of the content, while hash is not a form of the content.
------------

ILOC Projects: Paln-A, Plan-B and Plan-C

There was a bit of confusion regarding what these plans are. So thought of providing some clarity as far as I knew. Please correct it if needed.

Plan-A: This is the original technical design that incuded Nexus and Signer, and separate sequence diagrams for each ILOC business flow or usecase. The preliminary dev estimates were given for this context. This is not currently taken up for development.

Plan-B: This is the modified technical design that excludes Nexus and Signer. The original sequence diagrams are replaced by the  DRAM seqeunce diagram. The vendor development team (Infosys team) has been engaged to develop this, using a modular implementation approach. The project is using agile methodology for dev sprints.

Plan-C: This is the existing DRAM project code which Alex has written for his E4 project. The goal here is to reafactor this code into multiple reusable methods and make it run as an API service. The existing DRAM code is supposed to meet almost all (99%) of the requirements and technical design for ILOC project (see Plan-B). Infosys team is not engaged in this. Dublin team is working on this.

-----------

ILOC Team,

Just wanted to reiterate that any documents that need to be used as an input (requirements, design etc) need to be explicitely identified as such by the document authors and shared with the development team. Currently the following documents are shared and being used for the POC development:

1. Sequence diagrams
2. ICD document

In addition to the above, we are going to share Acceptance Critera document next week (see below).

All documents to be used as inputs by development team are shared via the bitbucket repo (iloc-documentation/dev-documents)

I request project team members to complete the documentation delivery to dev team latest by end of next week, including any Q&A sessions as needed.

Thanks,
Venkat 
-----------

Remove slash. Roles are not same.

Nexus, dram adn signer are all generic serivces. Generic services mean they don't look into the content they are handling and don't have content-specific logic.

Nexus offers mainly 3 operations for transctions - build, sign, submit.

Dram offers mainly 3 operations for messages - register, send, receive

None of these services and their operations are content-aware. That means they do not look into data they handle.

The implementation of these products commits to requirements are platform level or service level, which are not content-specific.

However, the acceptance criteria is content-specific. It refers to functionality related to message types. Dram requirements are not specific to message types. For example, issuance messages are treated differently from drawdown messages.

....

The developemnt team is currently building code to meet the requirements that are available in ICD and sequence diagrams.

If you think these requirements are the same as those requirements, then we don't need to send these requirements to dev.

It was aggreed that the requirements and design of the platform guarantees that these business requirements can be met by using platform alone without additional custom logic. The development team guarantees that the code implements the platform according to platform's generic requirements.

Guaranteeing that platform meets business requriements, is in the commitment from the roles that define the technical requirements and design for the platform, but not from the roles that implement the platform.

----------------

Just wondering what this formal sign-off means, by a dev-lead, on multiple process documents such as HLFA, Acceptance Criteria, Scope Document etc - all for a POC project in the Lab. Is this the practice across all the Lab projects or is this a Citi process for POC projects? I have not come across any such thing so far in my assigned trainings, so asking.

Also, I see that these docuemnts are being circulated among multiple teams (Lab-internal and external) for formal reviews and sign-offs with elaborate comittments from the Lab. Not sure on what commitments are the Lab-external teams are signing-off on, from their side. In my view, an agile POC project, by definition, should not be tied to too much formalism or the full set of Citi processes.

However, I fully agree in participating in any process for a POC, as long as I'm made aware of the process. Sorry If I missed to read anything that already explains all this. Would be glad if you can provide links to such information.

Copying Gulru, becuase the context involves the Lab processes for POC projects.

----------------



