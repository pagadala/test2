import math
from itertools import count, islice

def binom(n, k):
    v = 1
    for i in range(k):
        v *= (n - i) / (i + 1)
    return v

def zeta(s, t=100):
    if s == 1: return complex("inf")
    term = (1 / 2 ** (n + 1) * sum((-1) ** k * binom(n, k) * (k + 1) ** -s 
                                   for k in range(n + 1)) for n in count(0))
    return sum(islice(term, t)) / (1 - 2 ** (1 - s))

def slogdx(m, logc):
    sum = 0.0
    v = 1
    res = 1
    for i in range (m):
        v *= (m-i) / logc
        a = (-1)**(i+1) * v
        res += a
    # return c*(logc**m)*res
    return res

def sigmasum(c):
    for m in range (3, 32):
        sigma = 0.0
        for i in range (2,c+1):
            sigma += math.log(i)**m

        slog = slogdx(m, c)
        a = (sigma - slog)/ (0.5*(math.log(c)**m))
        # print(sigma, slog, a)
        print(a)

def slogsum(logc):
    for m in range (3, 100000, 5000):
        sum = slogdx(m, logc)
        t = math.e**(math.e/2) - 1
        a = (1 - (1/math.e) * math.log (1+ t*m/logc) )
        # s = c*(logc**m) * a
        # E = 1.3*(4*sin(ln(B4-1)*2*pi()/2.62 - 1.4)+1)*B4/12000
        b = 3+(m-3)/5000
        v = 4*math.sin(math.log(b-1)*2*math.pi/2.62 - 1.4)
        E = 1.3*(v+1)*(b/12000)
        print (sum, ',', a, a+E)

slogsum(100000)

# x = 1
# k=5
# sum = 0.0
# for i in range (2,2015):
#     a = math.pow(1+x*math.log(i)/k, k)
#     sum += a
#     # print(a)
# print(sum/2013)
# print(sum/math.pow(math.log(2014), k))

# for i in range (2,15):
#     a = 1+z10(i)
#     b = zeta(i)
#     print (i, a, b, b/a)

# k = 25
# c = 2000
# x = 1

# sum = 0.0
# for i in range (k+1):
# 	gsum = 0.0
# 	for m in range (2, c+1):
# 		gsum += (math.log(m))**i
# 	print (gsum*(i+7)/(math.log(c)**(i)))

# sum = 0.0
# for i in range (2, c+1):
# 	bsum = 0.0
# 	for m in range (k+1):
# 		bsum += (binom(k, m))*((x/k)**m)*(math.log(i))**m
# 	# print (bsum)
# 	sum += bsum
# print (sum/c, k/math.log(c))

# for i in range (k+1):
# 	gsum = 0.0
# 	for m in range (2, c+1):
# 		gsum += (math.log(m))**i
# 	print ((binom(k, i))*((x/k)**i)*gsum)
